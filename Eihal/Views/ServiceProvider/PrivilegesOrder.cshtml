@model List<Eihal.Models.SupportServiceModal>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<style>
    .status-clinical {
        background-color: #efd8e3;
        color: #212529;
        font-size: 12px;
        border-radius: 10%;
    }

    .service-card {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        position: relative;
        cursor: pointer;
        transition: transform 0.3s ease;
        background: #f8f9fa;
        height: 100%;
        border-radius: 15%
    }

        .service-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }


    .service-card-delete {
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        position: relative;
        cursor: cell;
        transition: transform 0.3s ease;
    }

        .service-card-delete:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }


    .service-card-body {
        text-overflow: ellipsis;
        overflow: hidden;
        background-color: #f8f9fa;
        padding: 5%;
    }

    .service-weight-700 {
        color: #00768c;
        font-weight: 700;
    }

    .service-card-title {
        color: #00768c;
        font-size: 18px;
        margin-bottom: 10px;
        color: #00768c
    }

    .service-card-title-added {
        color: #00768c;
        font-size: 18px;
        margin-bottom: 10px;
        color: #00768c
    }

    .service-card-text {
        color: #666;
        margin-bottom: 5px;
    }


    .dots-container {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .dots-button {
        background: none;
        border: none;
        color: #007bff;
        font-size: 18px;
        padding: 0;
        cursor: pointer;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        position: relative;
        overflow: hidden;
    }

        .dots-button::before {
            content: "";
            position: absolute;
            color: red;
            font-size: 20px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .dots-button::after {
            content: "";
            position: absolute;
            background-color: #007bff;
            width: 4px;
            height: 4px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        .dots-button::before,
        .dots-button::after {
            border-radius: 50%;
        }

        .dots-button::after {
            top: 54%;
        }

        .dots-button::before {
            top: 46%;
        }

    .activeLink {
        color: #00768c;
        font-weight: bold;
        pointer-events: none;
        cursor: not-allowed;
        background-color: whitesmoke
    }

    #menu .nav-item:hover {
        /* Add your desired styles for hover state */
        background-color: #e0e0e0;
        color: #333;
    }


    .tab-header {
        display: flex;
        justify-content: space-between;
        background-color: #f1f1f1;
    }

    .padding-top-25 {
        padding-top: 25px;
    }

    .tab-button {
        background-color: inherit;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 10px 20px;
        transition: background-color 0.3s;
        border-radius: 12px;
        margin: 5px;
    }

        .tab-button:hover {
            background-color: #ddd;
        }

        .tab-button.active {
            background-color: #00768c;
            color: white
        }

    .tab-content {
        background-color: #fff;
    }

    .no-results {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        margin-top: 20px;
        padding: 20px;
        font-size: 18px;
    }

        .no-results img {
            width: 80px;
            height: 80px;
            margin-bottom: 10px;
        }

        .no-results p {
            margin: 0;
        }

    button.active {
        background-color: #00768c;
        color: #fff;
        /* Add any other styles you want for active buttons */
    }

    .activeLink {
        color: #00768c;
        font-weight: bold;
        pointer-events: none;
        cursor: not-allowed;
        background-color: whitesmoke
    }

</style>

<div class="row col-md-12">
    <div class="scroll-container" style=" margin-right:2%; margin-left:2%">
        <div class="row privillages" style="padding-top: 40px; padding-left: 35px; white-space: nowrap;display:contents">
            <div>
                <button id="All" onclick="filterOnClinics('All')" style=" padding-left: 30px; padding-right: 30px; border-color: transparent;" data-value="All" class="active">All</button>
            </div>
            @if (Model.FirstOrDefault() != null)
            {
                @foreach (var clinic in Model.First().ClinicalSpecialties)
                {
                    <div>
                        <button id="@clinic" onclick="filterOnClinics('@clinic')" style=" border-color: transparent;" data-value="@clinic">@clinic</button>
                    </div>
                }
            }
        </div>
    </div>
</div>
<br />
@foreach (var item in Model)
{
    <input id="selectedServicesIds" hidden>
    <input id="selectedQuantities" hidden>
    <div class="col-md-3 padding-top-25" id="unselected_@item.ServiceId">

        <div class="service-card">
            <div data-toggle="modal" onclick="openInsertQtyPopup(@item.ServiceId ,'@item.TitleEn','@item.TitleAr','@item.ServiceLevelNameEn' ,'@item.ServiceLevelNameAr')" data-target="#AddServiceRequestCountModal" class="service-card-body">
                <div>
                    <img style="border-radius:30%" id="user-image-layout" src="@(item.Logo)" width="30" height="30" alt="user-image-profile" onerror="this.src='/users/images/Default-User-Profile.jpg'">
                </div>
                <div class="status status-clinical" style="display: inline-block;margin-top:5%;margin-bottom:5%">
                    <span id="ClinicalSpecialityName">@item.ClinicalSpecialityNameEn</span>
                </div>
                <h5 class="service-card-title">@item.TitleEn</h5>
                <div class="row col-12">
                </div>

            </div>

        </div>
    </div>
}
@if (Model.Count <= 0)
{
    <div class="no-results">
        <img src="~/images/NoResult.png" alt="No Results Found Icon">
        <p> No Services Added Yet.</p>
    </div>

}



<div class="modal fade" id="AddServiceRequestCountModal" tabindex="-1" role="dialog" aria-labelledby="AddServiceRequestCountModal" aria-hidden="true">
    <div class="modal-dialog custom-modal-dialog" style="max-width:fit-content" role="document">
        <div class="modal-content" style="margin-top:100%">
            <div class="modal-header">
                <h5 class="modal-title" id="AddServiceRequestCountModal">Request Service Qty</h5>
            </div>
            <div class="modal-body">
                <!-- Add your modal content here -->
                <div class="form-group">
                    <label style="font-weight: bold; color: #00768c;" for="service-name-readonly">Service Name:</label>
                    <input disabled type="text" class="form-control" id="service-name-readonly" value="" required>
                </div>

                <div class="form-group">
                    <label style="font-weight: bold; color: #00768c;" for="service-level-readonly">Service Level:</label>
                    <input disabled type="text" class="form-control" id="service-level-readonly" value="" required>
                    <input disabled type="hidden" id="service-id-input" value="0" required>
                </div>

                <div class="form-group">
                    <label style="font-weight: bold; color: #00768c;" for="qty-input">Qty:</label>
                    <input style="background-color:white" type="number" class="form-control" id="qty-input"  min="1" required onkeyup="if(this.value.length > 0) document.getElementById('send-for-review-btn').disabled = false; else document.getElementById('send-for-review-btn').disabled = true;">
                </div>
                <div class="modal-footer">
                    <button onclick="closeAddServiceRequestCountModal()" id="close-RequestCountModal" type="button" class="btn btn-danger">Cancel</button>
                    <button onclick="addToSelectionList()" type="button" class="btn btn-primary">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    function openInsertQtyPopup(id, titleEn, titleAr,serviceLevelEn,ServiceLevelAr) {
        $("#qty-input").val(1);
        $("#service-name-readonly").val(titleEn);
        $("#service-id-input").val(id);
        $("#service-level-readonly").val(serviceLevelEn);
    }

    function addToSelectionList() {
        var qty = $("#qty-input").val();
        var dynamicId = $("#service-id-input").val();
        var dynamicTitle = $("#service-name-readonly").val();

        if ($("#selectedServicesIds").val().length == 0) {
            $("#selectedServicesIds").val(dynamicId);
        
            appendServiceCard(dynamicId, dynamicTitle, qty)
        }
        else {
            var selectedSvcs = $("#selectedServicesIds").val();
            var arrayOfSelected = selectedSvcs.split(",");

         
            if (arrayOfSelected.includes(dynamicId.toString())) {
                toastr.warning('You are already added this Services', 'Warning !!');
            }
            else {
                var selectedServicesIds = $("#selectedServicesIds").val() + "," + dynamicId;
                $("#selectedServicesIds").val(selectedServicesIds)

              

                appendServiceCard(dynamicId, dynamicTitle, qty)
            }
        }

        $("#unselected_" + dynamicId).css("display", "none")
        closeAddServiceRequestCountModal();
        canNextToDoctor();
        checkResultCount();
        fillQty();
    }

    function fillQty() {
        // Get all elements with the "Quantity" class
        var elements = document.getElementsByClassName("Quantity");

        var arrayOfselectedQuantities = [];
        for (var i = 0; i < elements.length; i++) {
            arrayOfselectedQuantities.push(elements[i].textContent);
        }

        $("#selectedQuantities").val(arrayOfselectedQuantities);
    }

    function closeAddServiceRequestCountModal() {
        $("#AddServiceRequestCountModal").css("display", "none");
        $('#AddServiceRequestCountModal').on('hidden', function () { $(this).empty(); });
    }

    function deleteSelection(id) {

        var selectedSvcs = $("#selectedServicesIds").val();
        var arrayOfSelected = selectedSvcs.split(",");
        const index = arrayOfSelected.indexOf(id.toString());
        if (index > -1) { // only splice array when item is found
            var jquerySelector = "#" + id
            arrayOfSelected.splice(index, 1); // 2nd parameter means remove one item only
            $(jquerySelector).remove();
        }
        $("#unselected_" + id).css("display", "block")

        var newSelections = arrayOfSelected.toString();
        $("#selectedServicesIds").val(newSelections);
        checkResultCount()
        canNextToDoctor()
    }

    function canNextToDoctor() {
        if ($("#selectedServicesIds").val().length == 0) {
            $("#nextToSelectDoctor").prop('disabled', true)
            $("#nextToSelectDoctor").css("background", "gray");
            $("#nextToSelectDoctor").css("cursor", "not-allowed");
        }
        else {

            $("#nextToSelectDoctor").prop('disabled', false)
            $("#nextToSelectDoctor").css("background", "");
            $("#nextToSelectDoctor").css("cursor", "");
        }
    }

    function appendServiceCard(dynamicId, dynamicTitle, qty) {

        // Construct the HTML snippet with the dynamic values
        var htmlToAppend = `
                                                                    <div onclick="deleteSelection(${dynamicId})" id="${dynamicId}" class="col-md-3 padding-top-25 service-card-container">
                                                                        <div class="service-card">
                                                                            <div style="color:red; text-align:center">
                                                                            <i class="fa-solid fa-x"></i>
                                                                        </div>
                                                                            <div class="service-card-body">
                                                                                <h5 class="service-card-title-added">${dynamicTitle}</h5>
                                                                                    <h6">Qty:  <span class="Quantity"> ${qty} </span></h5>
                                                                            </div>
                                                                        </div>
                                                                    </div>`;

        // Append the HTML snippet to the element with ID "selection-privileges"
        $("#selection-privileges").append(htmlToAppend);
    }

    function checkResultCount() {
        var numberOfSelections = $(".service-card-title-added").length;
        if (numberOfSelections == 0)
            $("#NoResult-div").show()
        else
            $("#NoResult-div").hide()
    }
</script>

<style>
    .scroll-container {
        max-height: 100%;
        overflow-y: auto;
        display: flex;
    }

        /* Customize the scrollbar */
        .scroll-container::-webkit-scrollbar {
            width: 1px;
            height: 5px;
        }

        .scroll-container::-webkit-scrollbar-track {
            background-color: #f1f1f1;
            border-radius: 5px;
        }

        .scroll-container::-webkit-scrollbar-thumb {
            border-radius: 5px;
        }


    .privillages > div {
        padding: 5px; /* Adjust the padding as needed */
    }
</style>

<script>

    // Function to filter elements
    function filterOnClinics(filterValue) {
        ;

        // Get all buttons with the class "active" within privilegesContainer
        var $activeButtons = $('#privilegesContainer .active');

        // Loop through each active button and remove the "active" class
        $activeButtons.removeClass('active');

        $("#" + filterValue).addClass("active")

        // Select the "privilegesContainer" and find elements within it
        var $container = $('#privilegesContainer');

        if (filterValue == "All" || filterValue == "الكل") {
            $container.find('.service-card').parent().show();
        }
        else {
            $container.find('.service-card').parent().hide(); // Hide all elements within "privilegesContainer"
            // Show elements where ClinicalSpecialityName matches the filter value
            $container.find('.service-card').filter(function () {
                return $(this).find('#ClinicalSpecialityName').text().toLowerCase() === filterValue.toLowerCase();
            }).parent().show();
        }
        return;
    }


</script>